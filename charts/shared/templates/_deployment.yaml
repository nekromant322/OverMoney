{{- define "shared.deployment" -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-deployment
  labels:
    app: {{ .Chart.Name }}
spec:
  selector:
    matchLabels:
      app: {{ .Chart.Name }}
  replicas: {{ .Values.deployment.replicas }}
  minReadySeconds: {{ .Values.deployment.minReadySeconds }}
  strategy:
    type: {{ .Values.deployment.strategy.type }}
    rollingUpdate:
      maxUnavailable: {{ .Values.deployment.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.deployment.strategy.rollingUpdate.maxSurge }}
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - image: {{ .Values.deployment.containers.image }}:{{ .Values.deployment.containers.imageTag }}
          imagePullPolicy: {{ .Values.deployment.containers.pullPolicy }}
          {{- if .Values.deployment.containers.name }}
          name: {{ .Values.deployment.containers.name }}
          {{- else }}
          name: {{ .Chart.Name }}
          {{- end }}
          ports:
            - containerPort: {{ .Values.deployment.containers.containerPort }}
          {{- if .Values.deployment.containers.args }}
          args:
          {{- range .Values.deployment.containers.args }}
            - {{ . | quote }}
          {{- end }}
          {{- end }}
          resources:
            requests:
              memory: {{ .Values.deployment.containers.requestsMemory }}
            limits:
              memory: {{ .Values.deployment.containers.limitsMemory }}
          {{- if .Values.deployment.containers.env }}
          env:
            {{- range .Values.deployment.containers.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- if .Values.hostsNeeded }}
            - name: KAFKA_SERVICE_HOST
              value: kafka-service
            - name: ORCHESTRATOR_SERVICE_HOST
              value: orchestrator-service
            - name: RECOGNIZER_SERVICE_HOST
              value: recognizer-service
            - name: WIT_AI_GO_PROXY_SERVICE_HOST
              value: wit-ai-go-proxy-service
            - name: INVEST_SERVICE_HOST
              value: invest-service
            - name: TELEGRAM_BOT_SERVICE_HOST
              value: telegram-bot-service
            {{- end }}
            {{- range .Values.deployment.containers.envFrom }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .valueFrom.secretKeyRef.name | quote }}
                  key: {{ .valueFrom.secretKeyRef.key | quote }}
            {{- end }}
          {{- end }}
          {{- if .Values.deployment.containers.volumes }}
          volumeMounts:
          {{- range .Values.deployment.containers.volumes }}
            - name: {{ .name }}
              mountPath: {{ .volumeMountPath }}
              {{- if .readOnly }}
              readOnly: {{ .readOnly }}
              {{- end }}
          {{- end }}
          {{- end }}
      priorityClassName: {{ .Values.deployment.priorityClassName }}
      {{- if .Values.deployment.containers.volumes }}
      volumes:
      {{- range .Values.deployment.containers.volumes }}
        - name: {{ .name }}
          {{- if .persistentVolumeClaimName }}
          persistentVolumeClaim:
            claimName: {{ .persistentVolumeClaimName }}
          {{- else if $.Values.secretProviderClass.name }}
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: {{ $.Values.secretProviderClass.name }}
          {{- else if .configMapName }}
          configMap:
            name: {{ .configMapName }}
          {{- end }}
      {{- end }}
      {{- end }}
{{- end -}}