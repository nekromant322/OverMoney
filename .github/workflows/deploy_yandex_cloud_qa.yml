name: Build & Push & Deploy to k8s cluster

on:
  push:
    branches:
      - qa

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      recognizer: ${{ steps.filter.outputs.recognizer }}
#      orchestrator: ${{ steps.filter.outputs.orchestrator }}
#      telegram-bot: ${{ steps.filter.outputs.telegram-bot }}
#      invest: ${{ steps.filter.outputs.invest }}
#      wit-ai-go-proxy: ${{ steps.filter.outputs.wit-ai-go-proxy }}
#      frontend: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            recognizer:
              - 'recognizer_service/**'
#            orchestrator:
#              - 'orchestrator_service/**'
#            telegram-bot:
#              - 'telegram_bot_service/**'
#            invest:
#              - 'invest_service/**'
#            wit-ai-go-proxy:
#              - 'wit_ai_go_proxy/**'
#            frontend:
#              - 'frontend/**'

#  build-and-push-images:
#    name: Build & Push images to DockerHub
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Login to DockerHub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v1
#        with:
#          version: v0.7.0

#      - name: Orchestrator Build and Push to Dockerhub
#        if: ${{ needs.detect-changes.outputs.orchestrator == 'true' }}
#        uses: docker/build-push-action@v2
#        with:
#          file: /orchestrator_service/Dockerfile
#          push: true
#          tags: nekromant322/overmoney-orchestrator

#      - name: Recognizer Build and Push to Dockerhub
#        if: ${{ needs.detect-changes.outputs.recognizer == 'true' }}
#        uses: docker/build-push-action@v2
#        with:
#          file: /recognizer_service/Dockerfile
#          push: true
#          tags: nekromant322/overmoney-recognizer

#      - name: Telegram Bot Build and Push to Dockerhub
#        if: ${{ needs.detect-changes.outputs.telegram-bot == 'true' }}
#        uses: docker/build-push-action@v2
#        with:
#          file: /telegram_bot_service/Dockerfile
#          push: true
#          tags: nekromant322/overmoney-telegram-bot
#
#      - name: Invest Build and Push to Dockerhub
#        if: ${{ needs.detect-changes.outputs.invest == 'true' }}
#        uses: docker/build-push-action@v2
#        with:
#          file: /invest_service/Dockerfile
#          push: true
#          tags: nekromant322/overmoney-invest
#
#      - name: Wit ai go proxy Build and Push to Dockerhub
#        if: ${{ needs.detect-changes.outputs.wit-ai-go-proxy == 'true' }}
#        uses: docker/build-push-action@v2
#        with:
#          file: /wit_ai_go_proxy/Dockerfile
#          push: true
#          tags: nekromant322/overmoney-wit-ai-go-proxy
#      - name: Frontend Build and Push to Dockerhub
#        if: ${{ needs.detect-changes.outputs.frontend == 'true' }}
#        uses: docker/build-push-action@v2
#        with:
#          file: /frontend/Dockerfile
#          push: true
#          tags: nekromant322/overmoney-frontend

  deploy-to-k8s:
    name: Deploy to Kubernetes Cluster
    runs-on: ubuntu-latest
#    needs: [build-and-push-images]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBER_STATIC_CONFIG }}" | base64 --decode > $HOME/.kube/config
          kubectl config use-context default

      - name: Test Kubernetes Connection
        run: kubectl cluster-info

      - name: Helm Dry Run Recognizer Service
        run: helm upgrade --install --atomic --dry-run=server -n "qa" recognizer ./charts/recognizer

      - name: Helm Deploy Recognizer Service
        uses: vimeda/helm@v1.7.0
        with:
          release: recognizer
          namespace: qa
          chart: charts/recognizer
          values: |
            deployment.replicas: 1
          token: ${{ github.token }}
          secrets: ${{ toJSON(secrets) }}
          atomic: true

#      - name: Conditional Rollout Restarts
#        run: |
#          if [ "${{ needs.detect-changes.outputs.orchestrator }}" == "true" ]; then
#            kubectl rollout restart deployment sa-orchestrator
#          fi
#
#          if [ "${{ needs.detect-changes.outputs.recognizer }}" == "true" ]; then
#            kubectl rollout restart deployment sa-recognizer
#          fi
#
#          if [ "${{ needs.detect-changes.outputs.telegram-bot }}" == "true" ]; then
#            kubectl rollout restart deployment sa-telegram-bot
#          fi
#
#          if [ "${{ needs.detect-changes.outputs.invest }}" == "true" ]; then
#            kubectl rollout restart deployment sa-invest
#          fi
#
#          if [ "${{ needs.detect-changes.outputs.wit-ai-go-proxy }}" == "true" ]; then
#            kubectl rollout restart deployment sa-wit-ai-go-proxy
#          fi
#
#          if [ "${{ needs.detect-changes.outputs.frontend }}" == "true" ]; then
#            kubectl rollout restart deployment frontend
#          fi