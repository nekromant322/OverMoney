# DEPRECATED
#  todo избавиться после полноценной миграции экспортеров и invest в кубер
version: '3.1'

services:

  orchestrator-db:
    container_name: orchestrator-db
    image: postgres:14.1-alpine
    ports:
      - '5433:5432'
    environment:
      POSTGRES_USER: ${ORCHESTRATOR_DB_USER:-postgres}
      POSTGRES_PASSWORD: ${ORCHESTRATOR_DB_PASSWORD:-postgres}
      POSTGRES_DB: orchestrator-db
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: 50m

  telegram-bot-db:
    container_name: telegram-bot-db
    image: postgres:14.1-alpine
    ports:
      - '5435:5432'
    environment:
      POSTGRES_USER: ${TELEGRAM_BOT_DB_USER:-postgres}
      POSTGRES_PASSWORD: ${TELEGRAM_BOT_DB_PASSWORD:-postgres}
      POSTGRES_DB: telegram-bot-db
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: 50m

  postgres-exporter_orchestrator-db:
    image: prometheuscommunity/postgres-exporter
    ports:
      - '9187:9187'
    environment:
      DATA_SOURCE_URI: ${ORCHESTRATOR_DB_HOST}:${ORCHESTRATOR_DB_PORT}/orchestrator-db?sslmode=disable
      DATA_SOURCE_USER: ${ORCHESTRATOR_DB_USER}
      DATA_SOURCE_PASS: ${ORCHESTRATOR_DB_PASSWORD}
    depends_on:
      - orchestrator-db
      - prometheus

  postgres-exporter_telegram-bot-db:
    image: prometheuscommunity/postgres-exporter
    ports:
      - '9188:9187'
    environment:
      DATA_SOURCE_URI: ${TELEGRAM_BOT_DB_HOST}:${TELEGRAM_BOT_DB_PORT}/telegram-bot-db?sslmode=disable
      DATA_SOURCE_USER: ${TELEGRAM_BOT_DB_USER}
      DATA_SOURCE_PASS: ${TELEGRAM_BOT_DB_PASSWORD}
    depends_on:
      - telegram-bot-db
      - prometheus

  orchestrator:
    container_name: orchestrator
    image: nekromant322/overmoney:orchestrator
    restart: unless-stopped
    ports:
      - '8081:8081'
    environment:
      _JAVA_OPTIONS: -Xmx256m
      ORCHESTRATOR_DB_USER: ${ORCHESTRATOR_DB_USER}
      ORCHESTRATOR_DB_PASSWORD: ${ORCHESTRATOR_DB_PASSWORD}
      ORCHESTRATOR_DB_HOST: ${ORCHESTRATOR_DB_HOST}
      ORCHESTRATOR_DB_PORT: ${ORCHESTRATOR_DB_PORT}
      TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
      TELEGRAM_BOT_NAME: ${TELEGRAM_BOT_NAME}
      JWT_ACCESS_KEY: ${JWT_ACCESS_KEY}
      JWT_REFRESH_KEY: ${JWT_REFRESH_KEY}
      SPRING_APPLICATION_PROFILE: ${SPRING_APPLICATION_PROFILE}
      INTERNAL_KEY_HEADER: ${INTERNAL_KEY_HEADER}
    depends_on:
      - orchestrator-db
    logging:
      driver: "json-file"
      options:
        max-size: 50m

  recognizer:
    container_name: recognizer
    image: nekromant322/overmoney:recognizer
    restart: unless-stopped
    ports:
      - '8080:8080'
    environment:
      _JAVA_OPTIONS: -Xmx512m
      SPRING_APPLICATION_PROFILE: ${SPRING_APPLICATION_PROFILE}
      WIT_AI_TOKEN: ${WIT_AI_TOKEN}
      INTERNAL_KEY_HEADER: ${INTERNAL_KEY_HEADER}
    logging:
      driver: "json-file"
      options:
        max-size: 50m

  # telegram-bot:
  #   container_name: telegram-bot
  #   image: nekromant322/overmoney:telegram-bot
  #   restart: unless-stopped
  #   ports:
  #     - '8082:8082'
  #   environment:
  #     _JAVA_OPTIONS: -Xmx256m
  #     TELEGRAM_BOT_DB_USER: ${TELEGRAM_BOT_DB_USER}
  #     TELEGRAM_BOT_DB_PASSWORD: ${TELEGRAM_BOT_DB_PASSWORD}
  #     TELEGRAM_BOT_DB_HOST: ${TELEGRAM_BOT_DB_HOST}
  #     TELEGRAM_BOT_DB_PORT: ${TELEGRAM_BOT_DB_PORT}
  #     TELEGRAM_BOT_TOKEN: ${TELEGRAM_BOT_TOKEN}
  #     TELEGRAM_BOT_NAME: ${TELEGRAM_BOT_NAME}
  #     SPRING_APPLICATION_PROFILE: ${SPRING_APPLICATION_PROFILE}
  #     ORCHESTRATOR_HOST: ${ORCHESTRATOR_HOST}
  #     INTERNAL_KEY_HEADER: ${INTERNAL_KEY_HEADER}
  #   depends_on:
  #     - telegram-bot-db
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: 50m
  invest:
    container_name: invest
    image: nekromant322/overmoney:invest
    restart: unless-stopped
    ports:
      - '8087:8087'
    environment:
      _JAVA_OPTIONS: -Xmx256m
      INTERNAL_KEY_HEADER: ${INTERNAL_KEY_HEADER}
      SPRING_APPLICATION_PROFILE: ${SPRING_APPLICATION_PROFILE}
    logging:
      driver: "json-file"
      options:
        max-size: 50m

  wit-ai-go-proxy:
    container_name: wit-ai-go-proxy
    image: nekromant322/overmoney:wit-ai-go-proxy
    restart: unless-stopped
    ports:
      - '3333:3333'
    environment:
      WIT_AI_TOKEN: ${WIT_AI_TOKEN}
    logging:
      driver: "json-file"
      options:
        max-size: 50m

  prometheus:
    image: prom/prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus/config/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: unless-stopped
    command:
      - --storage.tsdb.retention.time=10d
      - --config.file=/etc/prometheus/prometheus.yml
    logging:
      driver: "json-file"
      options:
        max-size: 50m


  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
      image: confluentinc/cp-kafka:7.0.1
      environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:29092,PLAINTEXT_INTERNAL://kafka:9092
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
        KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      ports:
        - "9092:9092"
      depends_on:
        - zookeeper