  server:
    port: 8080
    servlet:
      encoding:
        charset: UTF-8
        force-response: true

  integration:
    internal:
      host:
        telegram-bot: http://sa-telegram-bot-svc
        recognizer: http://sa-recognizer-svc
        invest: http://sa-invest-svc

  telegram:
    bot:
      token: ${TELEGRAM_BOT_TOKEN:asd}
      name: ${TELEGRAM_BOT_NAME:asd}

  default-category:
    categories:
      -
        name: Зарплата
        type: INCOME
      -
        name: Продукты
        type: EXPENSE
      -
        name: Транспорт
        type: EXPENSE
      -
        name: Рестораны
        type: EXPENSE

  recent-activity:
    activityDays: 30

  admin:
    allowed_users:
      Marandyuk_Anatolii,
      HomerTheBald,
      shapran_dmitry,
      Galactic_Alex,
      coderror404

  filters:
    authorization-header:
      header-value: ${INTERNAL_KEY_HEADER:X-INTERNAL-KEY}

  jwt:
    secret:
      access: ${JWT_ACCESS_KEY:qBTmv4oXFFR2GwjexDJ4t6fsIUIUhhXqlktXjXdkcyygs8nPVEwMfo29VDRRepYDVV5IkIxBMzr7OEHXEHd37w==}
      refresh: ${JWT_REFRESH_KEY:zL1HB3Pch05Avfynovxrf/kpF9O2m4NCWKJUjEp27s9J2jEG3ifiKCGylaZ8fDeoONSTJP/wAzKawB8F9rOMNg==}
    token:
      lifetime-in-hours: 24

  spring:
    servlet:
      multipart:
        max-file-size: 10MB
        ## переменная используется в классе CommonExceptionHandler при ошибке MaxUploadSizeExceededException
        ## для формирования error message, кт в дальнейшем будет отображена на фронт пользователю
        max-request-size: 10MB

    datasource:
      url: jdbc:postgresql://${ORCHESTRATOR_DB_HOST:localhost}:${ORCHESTRATOR_DB_PORT:5433}/orchestrator-db
      username: ${ORCHESTRATOR_DB_USER:postgres}
      password: ${ORCHESTRATOR_DB_PASSWORD:postgres}
      driver-class-name: org.postgresql.Driver

    thymeleaf:
      enabled: true
      prefix: classpath:/templates/
      suffix: .html

    jpa:
      database: postgresql
      database-platform: org.hibernate.dialect.PostgreSQLDialect
      generate-ddl: true
      hibernate:
        ddl-auto: validate
      properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
          current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext

    application:
      name: orchestrator-service

    liquibase:
      enabled: true
      change-log: /db/changelog/db.changelog-master.xml

    profiles:
      active: ${SPRING_APPLICATION_PROFILE:dev}

  logging:
    level:
      org.zalando.logbook: TRACE

  management:
    endpoints:
      web:
        exposure:
          include: health,prometheus
    metrics:
      export:
        prometheus:
          enabled: true
      distribution:
        percentiles-histogram:
          "[http.server.requests]": true

  long-polling:
    overmoney:
      period-of-inactivity: 10_000

  mask-log-spring-boot-starter:
    maskedFields:
      - x-internal-key
      - investAccountId
      - token
      - cookie
      - tinkoffAccountId
      - favoriteAccountId